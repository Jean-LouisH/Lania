Lania Scenes

To do or correct:

*Define events to be partition by app states 
to differentiate, for example, gamplay and
menu states and what the inputs do in them.
*List switchable attributes, such as friction,
gravity, etc to objects and the scene.
*Define multiple press entry in inputs.


=============================


* Describes either a 2D or 3D scene with initial values 
for app variables like IDs, events, world size, cameras, 
inputs, audio, images, events, lights, UI, etc.
* Based on C programming language syntax.
* Only assignments are being made, no computation.
* Variables assigned with curly braces describe lists. The
individual attributes listed should be explicit named with their
assignment values. E.g. in "input_event_map = {
UP = "entity.moveUp()", ....}", UP is explicitly named among other
attributes to allow values to be assigned in any order.

Global Properties
-------------------

dimensions = [integer (2 or 3)]
background_audio = [audio filename]
image_layers = [list of image filenames]
input_event_map = [list of attributes assigned with script filenames]
platform_gravity = [floating point]
gravity_constant = [floating point]

Colour palette
------------------
black, white, red, green, blue,
orange, yellow, violet, purple,
brown, sky blue, gold, sea green,
pink, grey, dark red, dark green,
dark brown, magenta, dark grey

Switches (true or false)
-------------------
grid
gravity
engine_stats
collision_detection

Object Types
-------------------

*When instancing these objects, the variable name
becomes the ID that is used by the scripting language.
This allows it to be referenced as "id.x.method()."

Camera = {viewport, target}
Sprite = {texture, x, y, rect, alpha}
Regular_Polygon = {x, y, radius, rotational, colour, alpha}
Rectangle
Triangle
Mesh
Text = {content, x, y, size, font, colour, bold, italic, underlined}

==========================
Events

*Events can trigger loading scripts or sounds.

Input keys

*input_event_map variables 

[ASCII characters]
UP
DOWN
LEFT
RIGHT